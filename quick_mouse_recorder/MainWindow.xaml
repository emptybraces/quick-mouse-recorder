<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:quick_mouse_recorder"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="window" x:Class="quick_mouse_recorder.MainWindow"
        mc:Ignorable="d"
        Title="quick_mouse_recorder [v1.0]" Height="438" Width="464" ResizeMode="CanResizeWithGrip" Background="White" Foreground="Black" Topmost="True" Icon="icon.png" MouseEnter="Window_MouseEnter" MouseLeave="Window_MouseLeave" Loaded="Window_Loaded" SourceInitialized="Window_SourceInitialized" Closing="window_Closing">
    <Window.Resources>
        <!--<Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0,10,10,10"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="InputTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="5,15,5,0"/>
        </Style>
        <Style x:Key="InputTextStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>-->
        <Storyboard x:Key="Blink" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="1" To="0.2" Duration="0:0:1"
                RepeatBehavior="Forever" AutoReverse="true" />
        </Storyboard>
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="43*"/>
            <ColumnDefinition Width="71*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="261*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="96*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row ="0" Grid.Column="0">
            <TextBlock Text="Play List" Width="100" HorizontalAlignment="Left" FontWeight="Bold"/>
            <ListBox x:Name="xnListBoxPlayList" VerticalAlignment="Top" Height="240" SelectedIndex="{Binding SelectedIndexPlayName, Mode=TwoWay}" ItemsSource="{Binding ListPlayListNames}" IsEnabled="{Binding EnableFileList.Value}">
                <ListBox.InputBindings>
                    <KeyBinding Gesture="Del" Command="{Binding ListboxKeyBindRemoveSelectedItem}"/>
                    <KeyBinding Gesture="F2" Command="{Binding ListboxKeyBindRenameSelectedItem}"/>
                </ListBox.InputBindings>
                <ListBox.Resources>
                    <ContextMenu x:Key="ContextMenu">
                        <MenuItem Header="Add" Click="ListboxPlayListAdd_Context"/>
                    </ContextMenu>
                    <ContextMenu x:Key="ContextMenu_Item">
                        <MenuItem Header="Delete" Click="ListboxPlayListRemove_Context"/>
                        <MenuItem Header="Duplicate" Click="ListboxPlayListDuplicate_Context"/>
                        <MenuItem Header="Rename" Click="ListboxPlayListRename_Context"/>
                    </ContextMenu>
                    <Style TargetType="{x:Type ListBox}">
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}"/>
                    </Style>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu_Item}"/>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </StackPanel>
        <StackPanel x:Name="stackPanel_r0c1" Grid.Column="1" VerticalAlignment="Top" Height="256">
            <TextBlock Text="Command List" HorizontalAlignment="Left" FontWeight="Bold"/>
            <ListView x:Name="listViewCommand" ItemsSource="{Binding ListCurrentSelectedCommands}" Height="240" SelectedIndex="{Binding SelectedIndexListCommand, Mode=TwoWay}" local:BehaviorScrollToSelected.DoScroll ="{Binding SelectedValue, RelativeSource={RelativeSource Self}}" IsEnabled="{Binding EnableCommandList.Value}">
                <ListView.Resources>
                    <ContextMenu x:Key="ListViewItemResources">
                        <MenuItem Header="Delete" Click="ListViewCommandItemDelete_Context"/>
                    </ContextMenu>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ListViewItemResources}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Time}" Width="80"/>
                        <GridViewColumn Header="Stroke" DisplayMemberBinding="{Binding Id}" Width="80"/>
                        <GridViewColumn Header="X" DisplayMemberBinding="{Binding X}" Width="40"/>
                        <GridViewColumn Header="Y" DisplayMemberBinding="{Binding Y}" Width="40"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Top" Margin="57,0" Height="50" Width="170">
            <Button x:Name="button_play" Content="PLAY"  Width="75" Click="Button_play_Click" Focusable="False" IsEnabled="{Binding EnablePlayButton}"/>
            <Button x:Name="button_rec" Content="REC" Width="75" Click="Button_rec_Click" Focusable="False" IsEnabled="{Binding EnableRecButton.Value}" />
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2" IsEnabled="{Binding EnableSettings.Value}">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Width" Value="100"/>
                </Style>
            </StackPanel.Resources>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Value, ElementName=slider_captureIval, StringFormat=REC Interval: \{0:f2\}}" TextAlignment="Right" VerticalAlignment="Center" FontSize="10"/>
                <Slider x:Name="xNameSliderCaptureIval" TickPlacement="TopLeft" Width="182" Maximum="1" Minimum="0.01" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.1" Value="{Binding CaptureInterval.Value, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Repeat Count: " VerticalAlignment="Center" FontSize="10" HorizontalAlignment="Center" TextAlignment="Right"/>
                <xctk:IntegerUpDown Maximum="99" Minimum="0" Value="{Binding RepeatCount.Value, Mode=TwoWay}" />
                <TextBlock Text="Interval: " VerticalAlignment="Center" FontSize="10" Width="Auto"/>
                <xctk:SingleUpDown Maximum="999" Minimum="0" Value="{Binding RepeatInterval.Value, Mode=TwoWay}" IsEnabled="{Binding RepeatIntervalEnabled}" Increment="0.5" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Use Hotkey: " VerticalAlignment="Center" FontSize="10" HorizontalAlignment="Center" TextAlignment="Right"/>
                <CheckBox x:Name="xNameCheckBoxHotKey"  DataContext="{Binding VM_ContentHotkey.Value}" Content="{Binding DisplayState.Value}" IsChecked="{Binding IsChecked.Value}" Foreground="{Binding ContentForegroundBrush.Value}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
