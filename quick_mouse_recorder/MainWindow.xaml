<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:quick_mouse_recorder"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Name="window"
        x:Class="quick_mouse_recorder.MainWindow"
        mc:Ignorable="d"
        Title="quick_mouse_recorder [v1.0]" Height="600" Width="800" Background="White" Foreground="Black" Topmost="True" Icon="icon.png" MouseEnter="Window_MouseEnter" MouseLeave="Window_MouseLeave" Loaded="Window_Loaded" SourceInitialized="Window_SourceInitialized" Closing="window_Closing">
    <Window.Resources>
        <!--<Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0,10,10,10"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="InputTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="5,15,5,0"/>
        </Style>
        <Style x:Key="InputTextStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>-->
        <Storyboard x:Key="Blink" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="1" To="0.2" Duration="0:0:1"
                RepeatBehavior="Forever" AutoReverse="true" />
        </Storyboard>
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="136*"/>
            <ColumnDefinition Width="133"/>
            <ColumnDefinition Width="187*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="80"/>
            <RowDefinition Height="40*"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style x:Key="Header" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>
        </Grid.Resources>
        <!--Panel of PlayList-->
        <Grid Grid.Row ="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Play List" Style="{StaticResource Header}"/>
            <ListBox x:Name="xnListBoxPlayList" Height="{Binding ElementName=LayoutRoot, Path=ActualHeight}" SelectedIndex="{Binding SelectedIndexPlayName, Mode=TwoWay}" ItemsSource="{Binding ListPlayListNames}" IsEnabled="{Binding EnableFileList.Value}" Grid.Row="1">
                <ListBox.InputBindings>
                    <KeyBinding Gesture="Del" Command="{Binding ListboxKeyBindRemoveSelectedItem}"/>
                    <KeyBinding Gesture="F2" Command="{Binding ListboxKeyBindRenameSelectedItem}"/>
                </ListBox.InputBindings>
                <ListBox.Resources>
                    <ContextMenu x:Key="ContextMenu">
                        <MenuItem Header="Add" Click="ListboxPlayListAdd_Context"/>
                    </ContextMenu>
                    <ContextMenu x:Key="ContextMenu_Item">
                        <MenuItem Header="Delete" Click="ListboxPlayListRemove_Context"/>
                        <MenuItem Header="Duplicate" Click="ListboxPlayListDuplicate_Context"/>
                        <MenuItem Header="Rename" Click="ListboxPlayListRename_Context"/>
                    </ContextMenu>
                    <Style TargetType="{x:Type ListBox}">
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}"/>
                    </Style>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu_Item}"/>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </Grid>
        
        <!--Panel of Play and Rec properties-->
        <StackPanel Orientation="Vertical" Grid.Column="1" IsEnabled="{Binding EnableSettings.Value}">
            <StackPanel.Resources>
                <Style TargetType="TextBlock" x:Key="PropertyName">
                    <Setter Property="Width" Value="80"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="TextAlignment" Value="Right"/>
                </Style>
            </StackPanel.Resources>
            
            <!--Rec Options-->
            <TextBlock Text="REC Options" Style="{StaticResource Header}"/>
            <Separator/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Capture Interval: " Style="{StaticResource PropertyName}"/>
                <xctk:SingleUpDown x:Name="xnSingleUpDownCaptureIntvl" Maximum="1" Minimum="0.1" Value="{Binding CaptureInterval.Value, Mode=TwoWay}" Increment="0.1" Text="0.1" FormatString="f1" HorizontalAlignment="Right" Focusable="False" AllowSpin="False" />
                <!--<TextBlock Text="{Binding Value, ElementName=slider_captureIval, StringFormat=REC Interval: \{0:f2\}}" TextAlignment="Right" />-->
                <!--<Slider x:Name="xNameSliderCaptureIval" TickPlacement="TopLeft" Width="182" Maximum="1" Minimum="0.01" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.1" Value="{Binding CaptureInterval.Value, Mode=TwoWay}" />-->
            </StackPanel>
            <!--Play Options-->
            <TextBlock Text="Play Options" Style="{StaticResource Header}" Margin="0,50,0,0"/>
            <Separator/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Repeat Count: " Style="{StaticResource PropertyName}"/>
                <xctk:IntegerUpDown Maximum="99" Minimum="0" Value="{Binding RepeatCount.Value, Mode=TwoWay}" Focusable="False" MouseWheelActiveOnFocus="False" AllowSpin="False" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Interval: " Style="{StaticResource PropertyName}" />
                <xctk:SingleUpDown Maximum="999" Minimum="0" Value="{Binding RepeatInterval.Value, Mode=TwoWay}" IsEnabled="{Binding RepeatIntervalEnabled}" Increment="0.5" Focusable="False" AllowSpin="False" />
            </StackPanel>
            <!--<StackPanel Orientation="Horizontal">
                <TextBlock Text="Use Hotkey: " VerticalAlignment="Center" FontSize="10" HorizontalAlignment="Center" TextAlignment="Right"/>
                <CheckBox x:Name="xNameCheckBoxHotKey"  DataContext="{Binding VM_ContentHotkey.Value}" Content="{Binding DisplayState.Value}" IsChecked="{Binding IsChecked.Value}" Foreground="{Binding ContentForegroundBrush.Value}"/>
            </StackPanel>-->
        </StackPanel>
        
        <!--Panel of CommandList-->
        <Grid x:Name="xNameStackPanelCommandList" Grid.Column="2" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Selected PlayList's Command List" Style="{StaticResource Header}" />
            <ListView x:Name="listViewCommand" Height="{Binding ElementName=LayoutRoot, Path=ActualHeight}" ItemsSource="{Binding ListCurrentSelectedCommands}" SelectedIndex="{Binding SelectedIndexListCommand, Mode=TwoWay}" local:BehaviorScrollToSelected.DoScroll ="{Binding SelectedValue, RelativeSource={RelativeSource Self}}" IsEnabled="{Binding EnableCommandList.Value}" Grid.Row="1">
                <ListView.Resources>
                    <ContextMenu x:Key="ListViewItemResources">
                        <MenuItem Header="Delete" Click="ListViewCommandItemDelete_Context"/>
                    </ContextMenu>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ListViewItemResources}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Time}" Width="60"/>
                        <GridViewColumn Header="Cmd" DisplayMemberBinding="{Binding Id}" Width="60"/>
                        <GridViewColumn Header="X" DisplayMemberBinding="{Binding X}" Width="40"/>
                        <GridViewColumn Header="Y" DisplayMemberBinding="{Binding Y}" Width="40"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <!--Panel of state-->
        <StackPanel Background="#FFB2B2B2" Grid.Row="1" Grid.ColumnSpan="3">

        </StackPanel>
        <!--Panel of log-->
        <ScrollViewer Grid.ColumnSpan="3" Grid.Row="2" Background="#FF424242" BorderBrush="#FF00FF0C" BorderThickness="1" Foreground="#FFDADADA" >
            <TextBlock x:Name="xNameTextBlockLog" Text="This is log."/>
        </ScrollViewer>
    </Grid>
</Window>
